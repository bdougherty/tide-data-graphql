enum StationType {
	harmonic
	subordinate
}

enum PredictionType {
	high
	low
}

enum PredictionDatum {
	MHHW
	MHW
	MTL
	MSL
	MLW
	MLLW
}

enum PredictionUnit {
	ft
	m
}

enum DistanceUnit {
	mi
	km
}

enum TimeZoneFormat {
	name
	abbr
	offset
}

input Coordinate {
	lat: Float!
	lon: Float!
}

type TideStation {
	id: ID!
	name: String!
	commonName: String!
	etidesName: String!
	fullName: String!
	lat: Float!
	lon: Float!
	state: String!
	region: String!
	timeZone(format: TimeZoneFormat): String!
	type: StationType!
	distance(from: Coordinate!, units: DistanceUnit): Float!
	predictions(days: Int, datum: PredictionDatum, units: PredictionUnit): [TidePrediction]
	url: String!
	tidesUrl: String!
}

type TidePrediction {
	type: PredictionType!
	height: Float!
	time: String!
	unixTime: Int!
	station: TideStation
}

type Query {
	station(id: ID!): TideStation
	stations(near: Coordinate!, limit: Int): [TideStation]
}
